{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Endpoints for managing users"
    },
    {
      "name": "Debt",
      "description": "manage debts"
    },
    {
      "name": "Transactions",
      "description": "Endpoints for managing transactions"
    },
    {
      "name": "Debt Transactions",
      "description": "manage debts Transactions"
    },
    {
      "name": "Account",
      "description": "Manage user accounts"
    },
    {
      "name": "PaymentMode",
      "description": "Manage payment modes for user accounts"
    },
    {
      "name": "Tag",
      "description": "Endpoints for managing tags"
    },
    {
      "name": "Category",
      "description": "Operations related to user-defined categories"
    },
    {
      "name": "Auth",
      "description": "Authentication operations including login and logout"
    }
  ],
  "paths": {
    "/api/v1/users/user/{id}/update": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "description": "Updates existing user info by ID.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction by ID",
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update transaction",
        "operationId": "updateTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete transaction",
        "operationId": "deleteTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/tag/{id}/update": {
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update a tag by ID",
        "description": "Updates the tag with the specified ID using the provided details. Throws an error if the tag is not found.",
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts/{id}": {
      "get": {
        "tags": [
          "Debt"
        ],
        "summary": "get debt",
        "description": "get debt by id for the authenticated user",
        "operationId": "getDebt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Debt"
        ],
        "summary": "update debt",
        "description": "update debt for the authenticated user",
        "operationId": "updateDebt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Debt"
        ],
        "summary": "delete debt",
        "description": "delete debt for the authenticated user",
        "operationId": "deleteDebt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts-transactions/{id}": {
      "get": {
        "tags": [
          "Debt Transactions"
        ],
        "summary": "get debt Transaction",
        "description": "get debt Transaction by id for the authenticated user",
        "operationId": "getDebtTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Debt Transactions"
        ],
        "summary": "update debt Transaction",
        "description": "update debt Transaction for the authenticated user",
        "operationId": "updateDebtTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtTransactionRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Debt Transactions"
        ],
        "summary": "delete debt Transaction",
        "description": "delete debt Transaction for the authenticated user",
        "operationId": "deleteDebtTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get category by ID",
        "description": "Fetches a specific category owned by the user",
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Update category",
        "description": "Updates an existing category owned by the user",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete category by ID",
        "description": "Deletes a category owned by the user",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{id}/default-payment-mode": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Set default payment mode",
        "description": "Update default payment mode for the authenticated user",
        "operationId": "updateDefaultPaymentMode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/wallet/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update account",
        "description": "Update account information by ID",
        "operationId": "updateWalletAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletAccountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/payment-modes/{id}/update": {
      "put": {
        "tags": [
          "PaymentMode"
        ],
        "summary": "Update a payment mode",
        "description": "Updates the details of an existing payment mode by its ID",
        "operationId": "updatePaymentMode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModeRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/credit-card/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update account",
        "description": "Update account information by ID",
        "operationId": "updateCreditCardAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardAccountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/bank/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update bank account",
        "description": "Update bank account information by ID",
        "operationId": "updateBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/add": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "Adds a new user. Throws error if email already exists.",
        "operationId": "addUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transactions with pagination",
        "operationId": "getAllTransactions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a transaction",
        "operationId": "createTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/add": {
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create a new tag",
        "description": "Adds a new tag for the authenticated user. Throws an error if the tag already exists.",
        "operationId": "addTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts": {
      "get": {
        "tags": [
          "Debt"
        ],
        "summary": "Get all debts with pagination",
        "operationId": "getAllDebt",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Debt"
        ],
        "summary": "Add a new debt",
        "description": "Create a new debt for the authenticated user",
        "operationId": "addDebt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts-transactions/{debtId}": {
      "post": {
        "tags": [
          "Debt Transactions"
        ],
        "summary": "Add a new debt Transaction",
        "description": "Create a new debt Transaction for the authenticated user",
        "operationId": "addDebtTransaction",
        "parameters": [
          {
            "name": "debtId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtTransactionRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all categories",
        "description": "Retrieves all categories for the authenticated user",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Add a category",
        "description": "Creates a new category for the authenticated user",
        "operationId": "addCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "description": "Clears JWT cookie to log out the user.",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Authenticates user and sets JWT in HttpOnly cookie.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/wallet": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get wallet account",
        "description": "Retrieve an all wallet account",
        "operationId": "getAllWalletAccountsByUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add a new wallet account",
        "description": "Create a new wallet account for the authenticated user",
        "operationId": "addWallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletAccountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/payment-modes/{accountId}/add": {
      "post": {
        "tags": [
          "PaymentMode"
        ],
        "summary": "Add a new payment mode",
        "description": "Creates a new payment mode for a specific account. Returns an error if it already exists.",
        "operationId": "addPaymentMode",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModeRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/debit-card": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add a new DebitCard account",
        "description": "Create a new DebitCard account for the authenticated user",
        "operationId": "addDebitCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardAccountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/bank": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get bank account",
        "description": "Retrieve an all bank account",
        "operationId": "getAllBankAccountsByUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add a new bank account",
        "description": "Create a new bank account for the authenticated user",
        "operationId": "addBankAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current user",
        "description": "Returns user details from JWT token context.",
        "operationId": "getUserById",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/search": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Search transactions with filters",
        "operationId": "searchTransactions",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Transaction Type: 1=INCOME, 2=EXPENSE, 3=TRANSFER",
              "enum": [
                "1",
                "2",
                "3"
              ]
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minAmount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxAmount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/all": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transactions",
        "operationId": "getAllTransactions_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/account/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transaction by account ID",
        "operationId": "getAllTransactionByAccountId",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/tag/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get a tag by ID",
        "description": "Fetches a specific tag by its ID. Throws an error if the tag is not found.",
        "operationId": "getTagById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/all": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all tags for the authenticated user",
        "description": "Returns a list of all tags created by the currently authenticated user.",
        "operationId": "getAllTagsByUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts/lending": {
      "get": {
        "tags": [
          "Debt"
        ],
        "summary": "Get all Lending debts with pagination",
        "operationId": "getAllLendingDebt",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts/borrowing": {
      "get": {
        "tags": [
          "Debt"
        ],
        "summary": "Get all Borrowing debts with pagination",
        "operationId": "getAllBorrowingDebt",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts/all": {
      "get": {
        "tags": [
          "Debt"
        ],
        "summary": "get all debt",
        "description": "get all debt for the authenticated user",
        "operationId": "getAllDebt_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/debts-transactions/id/{debtId}": {
      "get": {
        "tags": [
          "Debt Transactions"
        ],
        "summary": "get all debt Transaction",
        "description": "get all debt Transaction for the authenticated user",
        "operationId": "getAllDebtTransaction",
        "parameters": [
          {
            "name": "debtId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/income": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all income categories",
        "description": "Retrieves all income categories for the authenticated user",
        "operationId": "getAllIncomeCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/expense": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all expense categories",
        "description": "Retrieves all expense categories for the authenticated user",
        "operationId": "getAllExpenseCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/payment-modes/{paymentModeId}": {
      "get": {
        "tags": [
          "PaymentMode"
        ],
        "summary": "Get payment mode by ID",
        "description": "Returns a single payment mode by its ID",
        "operationId": "getPaymentModeById",
        "parameters": [
          {
            "name": "paymentModeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/payment-modes/{accountId}/all": {
      "get": {
        "tags": [
          "PaymentMode"
        ],
        "summary": "Get all payment modes for an account",
        "description": "Returns a list of all payment modes associated with a specific account by account ID",
        "operationId": "getAllPaymentModesByAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/payment-modes/all": {
      "get": {
        "tags": [
          "PaymentMode"
        ],
        "summary": "Get all payment modes",
        "description": "Returns a list of all available payment modes across all accounts",
        "operationId": "getAllPaymentModes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/default-payment-mode": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get default payment mode",
        "description": "Retrieve the default payment mode for the authenticated user",
        "operationId": "getDefaultPaymentMode",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/credit/outstanding": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get credit-amount",
        "description": "Retrieve the available-amount for the authenticated user",
        "operationId": "getCreditOutstanding",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/credit/available": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get credit-amount",
        "description": "Retrieve the available-amount for the authenticated user",
        "operationId": "getCreditAvailable",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/credit-card": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get all credit card account",
        "description": "Retrieve an all credit card account",
        "operationId": "getAllCreditCardAccountsByUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/cash": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get all cash in account",
        "description": "Retrieve an all cash account",
        "operationId": "getAllCashAccountsByUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/available-amount": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get available-amount",
        "description": "Retrieve the available-amount for the authenticated user",
        "operationId": "getAvailableAmount",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/all": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get all accounts",
        "description": "Retrieve all available accounts grouped by account type",
        "operationId": "getAllAccounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get account by ID",
        "description": "Retrieve an account using its ID",
        "operationId": "getAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete account",
        "description": "Delete an account by its ID",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/user/{id}/delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user by ID",
        "description": "Deletes user by ID.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/tag/{id}/delete": {
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete a tag by ID",
        "description": "Deletes the tag with the specified ID. Throws an error if the tag is not found.",
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/payment-modes/{paymentModeId}/delete": {
      "delete": {
        "tags": [
          "PaymentMode"
        ],
        "summary": "Delete a payment mode",
        "description": "Deletes a specific payment mode by its ID",
        "operationId": "deletePaymentMode",
        "parameters": [
          {
            "name": "paymentModeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRequestDto": {
        "required": [
          "email",
          "firstName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TransactionRequestDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Transaction Type: 1=INCOME, 2=EXPENSE, 3=TRANSFER",
            "enum": [
              "1",
              "2",
              "3"
            ]
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "amount": {
            "type": "number"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "TagRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "DebtRequestDto": {
        "type": "object",
        "properties": {
          "personName": {
            "type": "string"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "additionalDetail": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Debts Type: 1=LENDING, 2=BORROWING",
            "enum": [
              "1",
              "2"
            ]
          }
        }
      },
      "DebtTransactionRequestDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "description": "Debt Transaction Type: 1=PAID, 2=RECEIVED, 3=ADJUSTMENT",
            "enum": [
              "1",
              "2",
              "3"
            ]
          }
        }
      },
      "CategoryRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Category Type: 1=EXPENSE, 2=INCOME",
            "enum": [
              "1",
              "2"
            ]
          },
          "color": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        }
      },
      "WalletAccountRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currentBalance": {
            "type": "number"
          }
        }
      },
      "PaymentModeRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Payment mode:  1=UPI, 2=CHECK,3=DEBIT_CARD, 4=INTERNET_BANKING",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ]
          }
        }
      },
      "CreditCardAccountRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currentAvailableLimit": {
            "type": "number"
          },
          "totalCreditLimit": {
            "type": "number"
          },
          "billingCycleStartDate": {
            "type": "string",
            "format": "date"
          },
          "paymentDueDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "BankAccountRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currentBalance": {
            "type": "number"
          },
          "linkedPaymentModes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentModeRequestDto"
            }
          }
        }
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }
}